server:
  port: 8080

spring:
  application:
    name: ambassador-microservice-template

  redis:
    host: localhost
    port: 6379
    timeout: 2000ms

  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes

logging:
  level:
    com.company.ambassador: DEBUG
    feign: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,circuitbreakers,circuitbreakerevents
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Feign Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000
        loggerLevel: full
      user-service:
        connectTimeout: 3000
        readTimeout: 5000
        loggerLevel: basic
      product-service:
        connectTimeout: 2000
        readTimeout: 8000
        loggerLevel: basic

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - feign.FeignException
      product-service:
        registerHealthIndicator: true
        slidingWindowSize: 15
        minimumNumberOfCalls: 8
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 60

  retry:
    instances:
      user-service:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - feign.RetryableException
      product-service:
        maxAttempts: 2
        waitDuration: 500ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 1.5

  timelimiter:
    instances:
      user-service:
        timeoutDuration: 3s
        cancelRunningFuture: true
      product-service:
        timeoutDuration: 5s
        cancelRunningFuture: true

# External Services
external-services:
  user-service:
    url: http://localhost:8081
    rate-limit:
      capacity: 100
      tokens: 10
      refill-period: 1s
  product-service:
    url: http://localhost:8082
    rate-limit:
      capacity: 50
      tokens: 5
      refill-period: 2s

# Cache Configuration
cache:
  user:
    ttl: 300 # 5 minutes
    max-size: 1000
  product:
    ttl: 600 # 10 minutes
    max-size: 500