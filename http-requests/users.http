### User API Requests
### Base URL: http://localhost:8080

### Variables
# @baseUrl = http://localhost:8080

### Get User by ID
GET {{baseUrl}}/api/v1/users/1
Accept: application/json

###

### Get Users with Pagination
GET {{baseUrl}}/api/v1/users?page=0&size=10
Accept: application/json

###

### Get Users with Custom Pagination
GET {{baseUrl}}/api/v1/users?page=1&size=5
Accept: application/json

###

### Search Users
GET {{baseUrl}}/api/v1/users/search?query=john
Accept: application/json

###

### Create User
POST {{baseUrl}}/api/v1/users
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john.doe@example.com"
}

###

### Create Another User
POST {{baseUrl}}/api/v1/users
Content-Type: application/json

{
  "name": "Jane Smith",
  "email": "jane.smith@example.com"
}

###

### Update User
PUT {{baseUrl}}/api/v1/users/1
Content-Type: application/json

{
  "name": "John Doe Updated",
  "email": "john.updated@example.com"
}

###

### Update User - Partial Update
PUT {{baseUrl}}/api/v1/users/1
Content-Type: application/json

{
  "name": "John Doe New Name"
}

###

### Delete User
DELETE {{baseUrl}}/api/v1/users/1
Accept: application/json

###

### Get Non-existent User (404 Test)
GET {{baseUrl}}/api/v1/users/999
Accept: application/json

###

### Create User with Invalid Data (Validation Test)
POST {{baseUrl}}/api/v1/users
Content-Type: application/json

{
  "name": "",
  "email": "invalid-email"
}

###

### Create User with Missing Data (Validation Test)
POST {{baseUrl}}/api/v1/users
Content-Type: application/json

{
  "name": "Test User"
}